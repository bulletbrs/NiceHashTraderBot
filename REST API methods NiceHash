Accounting
Accounting REST API methods

GET/main/api/v2/accounting/account2/{currency}BALANCE 
Get balance for selected currency. When setting extendedResponse to true pending details are added to the response.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
extendedResponse	boolean	User will receive extended response if set to true (optional)
query	false	example: true
* - required
Response Schema   |   Example
200 OK (application/json)
{
active : boolean - Active
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
totalBalance : object
available : object
individual : object
debt : object
pending : object
pendingDetails : {
deposit : object
withdrawal : object
exchange : object
hashpowerOrders : object
solo : object
soloRewards : object
couponReservedAmount : object
massBuyReservedAmount : object
}
enabled : boolean - Enabled
btcRate : number - Rate between currency and btc
fiatRate : number - Rate between currency and fiat
status : string - Currency wallet status - ACTIVE, INACTIVE, DELISTED
}
GET/main/api/v2/accounting/accounts2BALANCES 
Get total balance and for each currency separated. When setting extendedResponse to true pending details are added to each item in the response.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
extendedResponse	boolean	User will receive extended response if set to true (optional)
query	false	example: true
fiat	string	User will receive exchange rate from crypto currency to fiat
query		example: EUR
* - required
Response Schema   |   Example
200 OK (application/json)
{
hasIndividualAddress : boolean
amountToTransfer : number
nextTransferTs : integer
total : {
active : boolean - Active
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
totalBalance : object
available : object
individual : object
debt : object
pending : object
pendingDetails : {
deposit : object
withdrawal : object
exchange : object
hashpowerOrders : object
solo : object
soloRewards : object
couponReservedAmount : object
massBuyReservedAmount : object
}
enabled : boolean - Enabled
btcRate : number - Rate between currency and btc
fiatRate : number - Rate between currency and fiat
status : string - Currency wallet status - ACTIVE, INACTIVE, DELISTED
}
currencies : [
{
active : boolean - Active
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
totalBalance : object
available : object
individual : object
debt : object
pending : object
pendingDetails : {
deposit : object
withdrawal : object
exchange : object
hashpowerOrders : object
solo : object
soloRewards : object
couponReservedAmount : object
massBuyReservedAmount : object
}
enabled : boolean - Enabled
btcRate : number - Rate between currency and btc
fiatRate : number - Rate between currency and fiat
status : string - Currency wallet status - ACTIVE, INACTIVE, DELISTED
}
]
}
GET/main/api/v2/accounting/activity/{currency}ACTIVITIES 
Get activities for specified currency matching the filtering criteria as specified by request parameters.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
type	string	Activity type
query		[ "DEPOSIT", "WITHDRAWAL", "HASHPOWER", "HASHPOWER_SOLO", "MASSBUY", "HASHPOWER_SOLO_REWARD", "MINING", "EXCHANGE", "UNPAID_MINING", "CRYPTO_BUY_SELL", "PAYMENT", "INTERNAL_TRANSFER", "OTHER" ] example: DEPOSIT
types	array	Activity types
query		example: DEPOSIT,WITHDRAWAL
timestamp	integer	Pagination timestamp
query		example: 255135600000000
stage	string	Activity completion stage
query	ALL	[ "COMPLETED", "OPEN", "ALL" ] example: COMPLETED
limit	integer	Number of results (optional, default value is 10, maximum is 100)
query	10	example: 10
timeFormat	string	Time Format (optional, default value is MILI, other option MICRO)
query	MILI	[ "MILI", "MICRO" ] example: MILI
* - required
Response Schema   |   Example
200 OK (application/json)
[
]
GET/main/api/v2/accounting/admin/getinactivityfeebystatus
Try it out 
Parameters
name	type	description	in	default	options
year *	integer	
query		example:
month *	integer	
query		example:
batchSize *	integer	
query		example:
status *	integer	
query		example:
* - required
Response Schema   |   Example
200 OK (*/*)
[
string
]
GET/main/api/v2/accounting/admin/iseligibleforinactivityfee
Try it out 
Parameters
name	type	description	in	default	options
id *	string	
query		example:
* - required
Response Schema   |   Example
200 OK (*/*)
boolean
PUT/main/api/v2/accounting/admin/setnotifiedstatus
Try it out 
Parameters
name	type	description	in	default	options
inactiveAccountStatus *	integer	
query		example:
organizationId *	string	
query		example:
year *	integer	
query		example:
month *	integer	
query		example:
* - required
Response Schema   |   Example
200 OK (*/*)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
GET/main/api/v2/accounting/admin/transferinactiveuserfee
Try it out 
Parameters
name	type	description	in	default	options
year *	integer	
query		example:
month *	integer	
query		example:
timeOut *	integer	
query		example:
dryRun *	boolean	
query		example:
forOwner *	string	
query		example:
* - required
Response Schema   |   Example
200 OK (*/*)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
POST/main/api/v2/accounting/depositAddress/lnDEPOSIT ADDRESS 
Get deposit address for selected currency for all wallet types.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
amount *	number	Lightning Invoice Amount (optional, default value is null
query		example: 0.0001
isSelfHosted	boolean	Lightning Invoice is self hosted for travel rule
query	false	example:
isVasp	boolean	Lightning Invoice is VASP for travel rule
query	false	example:
* - required
Request Body
Accept: application/json (object)
name	type	description	options
emailVASPId	string	
firstName	string	
lastName	string	
legalName	string	
postalCode	string	
town	string	
country	string	
Response Schema   |   Example
200 OK (application/json)
{
type : {
code : string - Enum code - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
description : string - Translated enum
supportedCurrencies : [
string - Supported currencies - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
]
}
address : string - Address
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
travelAddress : string - Travel Address
}
GET/main/api/v2/accounting/depositAddressesDEPOSIT ADDRESS 
Get deposit address for selected currency for all wallet types.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
query		[ "BTC", "ETH", "XRP", "..." ] example: BTC
walletType	string	Wallet
query		[ "BITGO", "BLOCKCHAIN", "LIGHTNING", "MULTISIG", "FIREBLOCKS", "FIREBLOCKS_AG" ] example: BITGO
amount	number	Lightning Invoice Amount (optional, default value is null
query		example: 0.0001
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
type : {
code : string - Enum code - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
description : string - Translated enum
supportedCurrencies : [
string - Supported currencies - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
]
}
address : string - Address
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
travelAddress : string - Travel Address
}
]
}
GET/main/api/v2/accounting/depositsDEPOSITS 
List of deposit transactions details matching the filtering criteria as specified by request parameters.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
statuses	array	Deposit order statuses
query		example: [COMPLETED]
op	string	Order relation operation, also instructs how result is ordered by timestamp for paging
query	LT	[ "GT", "GE", "LT", "LE" ] example: GT
timestamp	integer	The order timestamp to compare
query		example: 255135600000000
page	integer	Page
query	0	example: 0
size	integer	Size (optional, default value is 100, maximum is 100)
query	100	example: 10
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
accountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
feeAmount : number - Fee amount
feeMetadata : string - Fee metadata
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
GET/main/api/v2/accounting/deposits/{currency}DEPOSITS 
List of deposit transactions details matching the filtering criteria as specified by request parameters.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
statuses	array	Deposit order statuses
query		example: [COMPLETED]
op	string	Order relation operation, also instructs how result is ordered by timestamp for paging
query	LT	[ "GT", "GE", "LT", "LE" ] example: GT
timestamp	integer	The order timestamp to compare
query		example: 255135600000000
page	integer	Page
query	0	example: 0
size	integer	Size (optional, default value is 100, maximum is 100)
query	100	example: 10
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
accountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
feeAmount : number - Fee amount
feeMetadata : string - Fee metadata
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
GET/main/api/v2/accounting/deposits2/{currency}/{id}DEPOSIT 
Get specific deposit with deposit order id and currency.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
id *	string	Deposit order id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
transactionRequest	boolean	Transaction request
query	false	example:
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Activity id
completedAt : integer - Timestamp in milliseconds since 1.1.1970
requestId : string - Deposit request id
amount : string - Amount
amountReceived : string - Amount received
feeAmount : string - Fee amount
address : string - Address
sourceAddress : string - Source address
txid : string - Transaction id
status : string - Status
minConfirmations : integer - Minimal confirmation required
confirmations : integer - Actual confirmation received
fromName : string
subtype : string - Deposit subtype
addressStatus : string - Address status
withheldReason : string - Withheld reason
withheldResolutionSubmitted : boolean - Withheld resolution submitted
twentyOneAnalyticsId : string - 21Analytics ID for self-hosted wallet proof
note : string - Deposit note
userNote : string - User note
activityCurrency : string
type : string - Activity type - DEPOSIT, WITHDRAWAL, HASHPOWER, HASHPOWER_SOLO, MASSBUY, HASHPOWER_SOLO_REWARD, MINING, EXCHANGE, UNPAID_MINING, CRYPTO_BUY_SELL, PAYMENT, INTERNAL_TRANSFER, OTHER
time : integer - Timestamp in milliseconds since 1.1.1970
internal : boolean - Is internal
individual : boolean - Is individual
feeMeta : string - Get activity fee meta
}
POST/main/api/v2/accounting/easymining/withdrawalWITHDRAWAL 
Get easy mining reward withdrawal by currency and id.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	
query		[ "BTC", "ETH", "XRP", "BCH", "LTC", "ZEC", "DASH", "XLM", "EOS", "USDT", "BSV", "LINK", "BAT", "PAX", "ZRX", "HOT", "OMG", "REP", "NEXO", "BTG", "EURKM", "ENJ", "MATIC", "ELF", "SNT", "BNT", "KNC", "MTL", "POLY", "POWR", "GTO", "LOOM", "CVC", "AST", "PPT", "LRC", "KEY", "STORJ", "STORM", "TNT", "DATA", "AOA", "RDN", "USDC", "FET", "ANT", "AERGO", "LBA", "XMR", "MITH", "BAND", "SXP", "EURS", "WBTC", "RVN", "UNI", "AAVE", "FTM", "YFI", "DOGE", "ONEINCH", "SUSHI", "OCEAN", "MKR", "CRV", "CHZ", "GRT", "GNO", "HBAR", "ADA", "ALGO", "XTZ", "SAND", "SHIB", "STX", "GALA", "SOL", "DOT", "ETC", "TRX", "KSM", "EUR", "KAS", "TBTC", "TETH", "TXRP", "TBCH", "TLTC", "TZEC", "TDASH", "TXLM", "TEOS", "TERC", "TBSV", "TBTG", "TEURKM", "TXMR", "TRVN", "TDOGE", "THBAR", "TADA", "TALGO", "TXTZ", "TSTX", "TTTT", "TSOL", "TDOT", "TETC", "TTRX", "TEUR", "TMARC", "TKAS" ] example:
withdrawalId *	string	
query		example:
* - required
Response Schema   |   Example
200 OK (application/json)
{
currency : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
organizationId : string
withdrawalId : string
status : string - PRE_SUBMITTED, WITHHELD, SUBMITTED, ACCEPTED, PROCESSING, COMPLETED, FAILED, CANCELED, INDETERMINATE
txid : string
amount : number
feeAmount : number
}
GET/main/api/v2/accounting/exchange/{id}/tradesEXCHANGE ORDER TRANSACTIONS 
Get all transaction for selected exchange order using exchange order id and market pair.
Try it out 
Permissions required
EXOR - Exchange / View exchange orders (EXOR)
Parameters
name	type	description	in	default	options
id *	string	Exchange order id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
exchangeMarket *	string	Exchange market symbol
query		example: ETHBTC
* - required
Response Schema   |   Example
200 OK (application/json)
{
trades : [
{
sellQty : string - Sell quantity
buyQty : string - Buy quantity
time : integer - Trade timestamp in milliseconds since 1.1.1970
fee : string - Fee for trade
}
]
}
GET/main/api/v2/accounting/hashpower/{id}/transactionsHASHPOWER ORDER TRANSACTIONS 
List of all transactions for selected hashpower order using hashpower order.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
id *	string	Order id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
limit	integer	Limit number of results (optional, default value is 100, maximum is 100)
query	100	example: 100
timestamp	integer	Pagination timestamp
query		example: 255135600000000
* - required
Response Schema   |   Example
200 OK (application/json)
{
transactions : [
{
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
created : integer - Creation timestamp in milliseconds since 1.1.1970
desc : string - Description for hashpower
amount : string - Amount
}
]
}
GET/main/api/v2/accounting/hashpowerEarnings/{currency}MINING PAYMENTS 
Get list of mining payments
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
timestamp	integer	Timestamp in milliseconds since 1.1.1970 (default value is now)
query		example: 255135600000000
page	integer	Page
query	0	example: 0
size	integer	Size (optional, default value is 100, maximum is 100)
query	100	example: 10
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
accountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
feeAmount : number - Fee amount
feeMetadata : string - Fee metadata
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
GET/main/api/v2/accounting/individual/balance
Try it out 
Response Schema   |   Example
200 OK (*/*)
{
amount : number
hasIndividualAddress : boolean
}
GET/main/api/v2/accounting/transaction/{currency}/{transactionId}TRANSACTION 
Get transaction by transaciton id and currency.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
transactionId *	string	Transaction id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
type : {
enumName : string - Name - DEPOSIT, WITHDRAWAL, MOVE
description : string - Translated description
}
fromOwner : string - Source of the transaction
fromAccountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
toOwner : string - Destination of the transaction
toAccountType : string - Destination account type - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
requestId : string - Operation request id
}
GET/main/api/v2/accounting/transactions/{currency}TRANSACTIONS 
Get all transactions for selected currency matching the filtering criteria as specified by request parameters.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
type	string	Transaction type
query		[ "DEPOSIT", "WITHDRAWAL", "MOVE" ] example: DEPOSIT
purposes	array	Transaction purposes
query		example: [EXCHANGE_TRADE]
op	string	Order relation operation
query		[ "GT", "GE", "LT", "LE" ] example: GT
timestamp	integer	Timestamp to compare
query		example: 255135600000000
size	integer	Size (optional, default value is 10, maximum is 100)
query	10	example: 10
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
accountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
feeAmount : number - Fee amount
feeMetadata : string - Fee metadata
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
GET/main/api/v2/accounting/travelrule/vaspsTRAVEL RULE VASPS 
Get supported Travel Rule VASPS
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
types	array	
query		example:
walletTypes	array	
query		example:
* - required
Response Schema   |   Example
200 OK (application/json)
{
vasps : [
{
id : string
name : string
email : string
}
]
}
POST/main/api/v2/accounting/travelrule/withheldDeposit/resolve/{id}TRAVEL RESOLVE WITHHELD 
Resolve travel rule withheld despoit from VASPS
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
id *	string	
path		example:
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
emailVASPId	string	
firstName	string	
lastName	string	
legalName	string	
postalCode	string	
town	string	
country	string	
Response Schema   |   Example
200 OK (application/json)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
POST/main/api/v2/accounting/travelrule/withheldDeposit/resolveLightningSHW/{id}TRAVEL RULE LIGHTNING SHW 
Get supported Travel Rule Self-hosted wallets
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
id *	string	
path		example:
* - required
Response Schema   |   Example
200 OK (application/json)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
POST/main/api/v2/accounting/travelrule/withheldDeposit/resolveSHW/{id}TRAVEL RULE SHW 
Get supported Travel Rule Self-hosted wallets
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
id *	string	
path		example:
* - required
Request Body
Accept: multipart/form-data (object)
name	type	description	options
currency	string	
[ "BTC", "ETH", "XRP", "BCH", "LTC", "ZEC", "DASH", "XLM", "EOS", "USDT", "BSV", "LINK", "BAT", "PAX", "ZRX", "HOT", "OMG", "REP", "NEXO", "BTG", "EURKM", "ENJ", "MATIC", "ELF", "SNT", "BNT", "KNC", "MTL", "POLY", "POWR", "GTO", "LOOM", "CVC", "AST", "PPT", "LRC", "KEY", "STORJ", "STORM", "TNT", "DATA", "AOA", "RDN", "USDC", "FET", "ANT", "AERGO", "LBA", "XMR", "MITH", "BAND", "SXP", "EURS", "WBTC", "RVN", "UNI", "AAVE", "FTM", "YFI", "DOGE", "ONEINCH", "SUSHI", "OCEAN", "MKR", "CRV", "CHZ", "GRT", "GNO", "HBAR", "ADA", "ALGO", "XTZ", "SAND", "SHIB", "STX", "GALA", "SOL", "DOT", "ETC", "TRX", "KSM", "EUR", "KAS", "TBTC", "TETH", "TXRP", "TBCH", "TLTC", "TZEC", "TDASH", "TXLM", "TEOS", "TERC", "TBSV", "TBTG", "TEURKM", "TXMR", "TRVN", "TDOGE", "THBAR", "TADA", "TALGO", "TXTZ", "TSTX", "TTTT", "TSOL", "TDOT", "TETC", "TTRX", "TEUR", "TMARC", "TKAS" ]
comment	string	
format	string	
[ "ANY", "STANDARD", "P2PKH", "P2SH", "P2WPKH", "P2WSH", "P2TR" ]
msg	string	
address	string	
xpubRequired	boolean	
xPubKey	string	
media	array	
type	string	
[ "MEDIA_PROOF", "SIGNATURE_PROOF" ]
xpubKey	string	
Response Schema   |   Example
200 OK (application/json)
{
registerMediaProof : {
id : string
selfHostedWalletId : string
mediaPaths : [
string
]
asset : string
address : string
createdAt : string
chainalysisRisk : string - SEVERE, HIGH, MEDIUM, LOW
comment : string
customerId : string
}
aopdMediaProof : {
id : string
selfHostedWalletId : string
mediaPaths : [
string
]
asset : string
address : string
createdAt : string
chainalysisRisk : string - SEVERE, HIGH, MEDIUM, LOW
comment : string
customerId : string
}
aopdSignatureProof : {
id : string
asset : string
address : string
message : string
chainalysisRisk : string - SEVERE, HIGH, MEDIUM, LOW
createdAt : string
comment : string
customerId : string
signature : string
xpub : {
xpub : string
addressPath : string
}
}
requestAoppProof : {
id : string
quickproofUrl : string
}
proofsCount : integer
proofForAddress : {
id : string
aopdAsset : string
asset : string
address : string
message : string
createdAt : string
chainalysisRisk : string
comment : string
customerId : string
signature : string
mediaPaths : [
string
]
xpub : {
xpub : string
addressPath : string
}
__typename : string
}
proof : {
id : string
aopdAsset : string
asset : string
address : string
message : string
createdAt : string
chainalysisRisk : string
comment : string
customerId : string
signature : string
mediaPaths : [
string
]
xpub : {
xpub : string
addressPath : string
}
__typename : string
}
proofsForCustomer : [
{
id : string
aopdAsset : string
asset : string
address : string
message : string
createdAt : string
chainalysisRisk : string
comment : string
customerId : string
signature : string
mediaPaths : [
string
]
xpub : {
xpub : string
addressPath : string
}
__typename : string
}
]
}
POST/main/api/v2/accounting/withdrawalCREATE WITHDRAWAL 
Create withdrawal request with whitelisted address using withdraw address id. Address can be whitelisted using web page or mobile application. All whitelisted address ids can be listed using /main/api/v2/accounting/withdrawalAddresses endpoint.
Try it out 
Permissions required
WIFU - Withdraw funds (WIFU)
Request Body * required
Accept: application/json (object)
name	type	description	options
currency	string	From currency
[ "BTC", "ETH", "XRP", "BCH", "LTC", "ZEC", "DASH", "XLM", "EOS", "USDT", "BSV", "LINK", "BAT", "PAX", "ZRX", "HOT", "OMG", "REP", "NEXO", "BTG", "EURKM", "ENJ", "MATIC", "ELF", "SNT", "BNT", "KNC", "MTL", "POLY", "POWR", "GTO", "LOOM", "CVC", "AST", "PPT", "LRC", "KEY", "STORJ", "STORM", "TNT", "DATA", "AOA", "RDN", "USDC", "FET", "ANT", "AERGO", "LBA", "XMR", "MITH", "BAND", "SXP", "EURS", "WBTC", "RVN", "UNI", "AAVE", "FTM", "YFI", "DOGE", "ONEINCH", "SUSHI", "OCEAN", "MKR", "CRV", "CHZ", "GRT", "GNO", "HBAR", "ADA", "ALGO", "XTZ", "SAND", "SHIB", "STX", "GALA", "SOL", "DOT", "ETC", "TRX", "KSM", "EUR", "KAS", "TBTC", "TETH", "TXRP", "TBCH", "TLTC", "TZEC", "TDASH", "TXLM", "TEOS", "TERC", "TBSV", "TBTG", "TEURKM", "TXMR", "TRVN", "TDOGE", "THBAR", "TADA", "TALGO", "TXTZ", "TSTX", "TTTT", "TSOL", "TDOT", "TETC", "TTRX", "TEUR", "TMARC", "TKAS" ]
amount	number	Amount in currency max precision
withdrawalAddressId	string	Withdrawal address ID (address must be whitelisted first)
userNote	string	User withdraw note
walletType	string	Wallet type
[ "BITGO", "COINBASE", "PAYEER", "EXTERNAL", "FEES", "KRIPTOMAT", "BLOCKCHAIN", "LIGHTNING", "INTERNAL", "MULTISIG", "FIREBLOCKS", "FIREBLOCKS_AG", "MINING", "NEXPAY", "NEXPAY_CORPORATE", "MAERKIBAUMAN", "LIGHTNING_LTD" ]
Response Schema   |   Example
200 OK (application/json)
{
id : string - Withdrawal request id
}
DELETE/main/api/v2/accounting/withdrawal/{currency}/{id}CANCEL WITHDRAWAL 
Cancel withdrawal using withdrawal id and currency.
Try it out 
Permissions required
WIFU - Withdraw funds (WIFU)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
id *	string	Withdrawal Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
GET/main/api/v2/accounting/withdrawal2/{currency}/{id}WITHDRAWAL 
Get account withdrawal by currency and id.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
id *	string	Withdrawal Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Withdrawal id
created : integer
completedAt : integer - Time in milliseconds since 1.1.1970
requestId : string - Withdrawal request id
currency : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
amount : string - Amount
amountReceived : string - Amount received
feeAmount : string - Fee amount
address : string - Withdrawal address
status : string - Withdrawal status
wallet : string - Wallet type - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
subtype : string - Withdrawal subtype
withheldReason : string - Withheld reason
autoWdJobId : string - Auto Withdraw job which started this Withdraw
userNote : string
transitionType : string - PRE_TRANSITION_ORGANIZATION, AFTER_TRANSITION_NEW_ORGANIZATION, AFTER_TRANSITION_OLD_ORGANIZATION, AFTER_TRANSITION_NEW_REGISTRATION
note : string
lnWithdrawalAddressId : string
activityCurrency : string
type : string - Activity type - DEPOSIT, WITHDRAWAL, HASHPOWER, HASHPOWER_SOLO, MASSBUY, HASHPOWER_SOLO_REWARD, MINING, EXCHANGE, UNPAID_MINING, CRYPTO_BUY_SELL, PAYMENT, INTERNAL_TRANSFER, OTHER
time : integer - Time in milliseconds since 1.1.1970
internal : boolean
individual : boolean
feeMeta : string - Get activity fee meta
depositRefund : boolean
emWithdrawal : boolean
}
GET/main/api/v2/accounting/withdrawalAddress/{id}WITHDRAWAL ADDRESS 
Get withdrawal address by widrawal address id.
Try it out 
Permissions required
WIFU - Withdraw funds (WIFU)
Parameters
name	type	description	in	default	options
id *	string	Withdrawal address
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string
type : {
code : string - Enum code - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
description : string - Translated enum
supportedCurrencies : [
string - Supported currencies - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
]
}
name : string
address : string
createdTs : string - Created timestamp
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
status : {
code : string - Enum code - PENDING_EMAIL_CONFIRMATION, ACTIVE, INACTIVE, INVALID, PENDING_DEPOSIT_CONFIRMATION, DEPRECATED, PENDING_2FA_CONFIRMATION, PENDING_SELF_CUSTODIAL_WALLET_VERIFICATION, REJECTED_SELF_CUSTODIAL_WALLET_VERIFICATION, ACCOUNT_CLOSING, SELF_CUSTODIAL_AND_WITHDRAWAL_ADDRESS_MISMATCH
description : string - Translated enum
}
emailConfirmationType : string - E-mail confirmation type (type used on /api/v2/emailConfirmation/verify), optional, set only if status requires e-mail confirmation
meta : string - Address metadata
updatedTs : string
inMoratorium : boolean
encryptedMeta : {
iban : string
name : string
reference : string
streetAddress : string
city : string
postalCode : string
country : string
bic : string
bankName : string
firstNameRecipient : string
lastNameRecipient : string
travelAddress : string
legalEntityName : string
emailVASPId : string
}
addressForAllTokens : boolean - Address used for all tokens
isDefault : boolean - Is default address
}
GET/main/api/v2/accounting/withdrawalAddressesWITHDRAWAL ADDRESSES 
List withdrawal addresses for specified currency.
Try it out 
Permissions required
WIFU - Withdraw funds (WIFU)
Parameters
name	type	description	in	default	options
currency	string	Currency
query		[ "BTC", "ETH", "XRP", "..." ] example: BTC
size	integer	Page size (optional, default value is 100, maximum is 100)
query	100	example: 100
page	integer	Page number (optional, default: 0)
query	0	example: 0
type	string	Address type
query		[ "crypto", "fiat", "lnAddress" ] example: crypto
showAll	boolean	Show non visible
query	false	example: false
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string
type : {
code : string - Enum code - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
description : string - Translated enum
supportedCurrencies : [
string - Supported currencies - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
]
}
name : string
address : string
createdTs : string - Created timestamp
currency : string - Currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
status : {
code : string - Enum code - PENDING_EMAIL_CONFIRMATION, ACTIVE, INACTIVE, INVALID, PENDING_DEPOSIT_CONFIRMATION, DEPRECATED, PENDING_2FA_CONFIRMATION, PENDING_SELF_CUSTODIAL_WALLET_VERIFICATION, REJECTED_SELF_CUSTODIAL_WALLET_VERIFICATION, ACCOUNT_CLOSING, SELF_CUSTODIAL_AND_WITHDRAWAL_ADDRESS_MISMATCH
description : string - Translated enum
}
emailConfirmationType : string - E-mail confirmation type (type used on /api/v2/emailConfirmation/verify), optional, set only if status requires e-mail confirmation
meta : string - Address metadata
updatedTs : string
inMoratorium : boolean
encryptedMeta : {
iban : string
name : string
reference : string
streetAddress : string
city : string
postalCode : string
country : string
bic : string
bankName : string
firstNameRecipient : string
lastNameRecipient : string
travelAddress : string
legalEntityName : string
emailVASPId : string
}
addressForAllTokens : boolean - Address used for all tokens
isDefault : boolean - Is default address
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
GET/main/api/v2/accounting/withdrawals/{currency}WITHDRAWALS 
Get list of withdrawals matching the filtering criteria as specified by request parameters.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
currency *	string	Currency
path		[ "BTC", "ETH", "XRP", "..." ] example: BTC
statuses	array	Withdrawal order statuses
query		example: [SUBMITTED]
op	string	Order relation operation, also instructs how result is ordered by timestamp for paging
query	LT	[ "GT", "GE", "LT", "LE" ] example: GT
timestamp	integer	The order timestamp to compare
query		example: 255135600000000
page	integer	Page
query	0	example: 0
size	integer	Size (optional, default value is 100, maximum is 100)
query	100	example: 100
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Id of the transaction
created : integer - Transaction creation timestamp in milliseconds since 1.1.1970
currency : {
enumName : string - Name - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
description : string - Translated description
}
amount : number - Transaction amount
metadata : string - Transation metadata
accountType : {
enumName : string - Name - USER, USER_EXCHANGE_PENDING, USER_WITHDRAWAL_PENDING, USER_DEBT, EXCHANGE_FEE, HASHPOWER_ORDERS, HASHPOWER_PAYOUTS, HASHPOWER_ORDER_FEE, HASHPOWER_PAYOUT_FEE, WALLET_BITGO_BLOCKCHAIN, WALLET_BITGO_DEPOSIT_PENDING, WALLET_BITGO_DEPOSIT_CONFIRMED, WALLET_BITGO_DEPOSITS_FEES, WALLET_BITGO_DEPOSIT_CONFISCATED, WALLET_BITGO_DEPOSIT_UNASSIGNED, WALLET_BITGO_WITHDRAWAL_PENDING, WALLET_BITGO_WITHDRAWAL_CONFIRMED, WALLET_BITGO_WITHDRAWALS_FEES, WALLET_COINBASE_BLOCKCHAIN, WALLET_COINBASE_WITHDRAWAL_PENDING, WALLET_COINBASE_WITHDRAWALS_FEES, WALLET_COINBASE_DEPOSIT_PENDING, WALLET_COINBASE_DEPOSIT_CONFIRMED, WALLET_COINBASE_DEPOSIT_UNASSIGNED, WALLET_PAYEER_WITHDRAWAL_PENDING, WALLET_PAYEER_WITHDRAWALS_FEES, TESTING, WALLET_BITGO_WITHDRAWAL_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_UNASSIGNED, WALLET_KRIPTOMAT_DEPOSIT_FEES, WALLET_KRIPTOMAT_WITHDRAWAL_PENDING, WALLET_KRIPTOMAT_WITHDRAWAL_FEES, WALLET_BLOCKCHAIN_DEPOSIT_PENDING, WALLET_BLOCKCHAIN_DEPOSITS_FEES, WALLET_BLOCKCHAIN_DEPOSIT_UNASSIGNED, WALLET_BLOCKCHAIN_WITHDRAWAL_PENDING, WALLET_BLOCKCHAIN_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSIT_UNASSIGNED, WALLET_LIGHTNING_WITHDRAWAL_PENDING, WALLET_LIGHTNING_WITHDRAWALS_FEES, WALLET_LIGHTNING_DEPOSITS_FEES, WALLET_MULTISIG_DEPOSIT_UNASSIGNED, WALLET_MULTISIG_DEPOSITS_FEES, WALLET_MULTISIG_WITHDRAWALS_FEES, TOKEN_WITHDRAWAL_FEE_PENDING, WALLET_MULTISIG_DEPOSIT_FEES, CHARITY, HASHPOWER_ORDERS_PENDING, USER_FEE, USER_MNG_FEE, USER_EX_FEE, WALLET_BITGO_REFUND_UNASSIGNED, WALLET_BLOCKCHAIN_REFUND_UNASSIGNED, WALLET_MULTISIG_REFUND_UNASSIGNED, ADMIN_SERVICE_FEE, MINING_AFFILIATE_FEE, WALLET_FIREBLOCKS_DEPOSITS_FEES, WALLET_FIREBLOCKS_DEPOSIT_UNASSIGNED, WALLET_FIREBLOCKS_WITHDRAWALS_FEES, WALLET_FIREBLOCKS_WITHDRAWAL_UNASSIGNED, WITHHELD, SOLO_REWARD, WALLET_WITHDRAWALS_FEES, WALLET_DEPOSITS_FEES, SOLO_REWARD_FEE, SOLO_REWARD_FEE_GEO, WALLET_FIREBLOCKS_REFUND_UNASSIGNED, EXCHANGE_FEE_UAB, WALLET_DEPOSITS_DEPRECATED_FEES, SOLO_SHARED_RESERVED, COUPON_RESERVED, MERCHANT_FEE, WALLET_NEXPAY_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_DEPOSIT_FEES, WALLET_NEXPAY_WITHDRAWAL_PENDING, WALLET_NEXPAY_WITHDRAWAL_FEES, MASS_BUY_RESERVED, WALLET_MAERKIBAUMAN_DEPOSIT_UNASSIGNED, WALLET_MAERKIBAUMAN_DEPOSIT_FEES, WALLET_MAERKIBAUMAN_WITHDRAWAL_PENDING, WALLET_MAERKIBAUMAN_WITHDRAWAL_FEES, WALLET_NEXPAY_CORPORATE_DEPOSIT_UNASSIGNED, WALLET_NEXPAY_CORPORATE_DEPOSIT_FEES, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_PENDING, WALLET_NEXPAY_CORPORATE_WITHDRAWAL_FEES, INACTIVITY_FEE, INDIVIDUAL_USER, WALLET_LIGHTNING_LTD_WITHDRAWALS_FEES
description : string - Translated description
}
feeAmount : number - Fee amount
feeMetadata : string - Fee metadata
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
Public
Public REST API methods

GET/main/api/v2/mining/algorithmsMINING ALGORITHMS
List the mining algorithms and detailed algorithm information.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
miningAlgorithms : [
{
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
displayMiningFactor : string - Unit for mining factor
miningFactor : number - Mining factor
displayMarketFactor : string - Unit for market factor
marketFactor : number - Market factor
minimalOrderAmount : number - Minimal amount in BTC to create order
minSpeedLimit : number - Minimal allowed speed limit
maxSpeedLimit : number - Maximal allowed speed limit
priceDownStep : number - Maximal hashpower order down step
minimalPoolDifficulty : number - Minimal required pool difficulty
port : integer - TCP port for algorithm
color : string - Color in charts for algorithm
ordersEnabled : boolean - Are hashpower orders enabled
enabledMarkets : string - What hashpower markets are available
displayPriceFactor : string - Unit for price factor
priceFactor : number - Price factor
}
]
}
GET/main/api/v2/mining/marketsMINING MARKETS
List all hashpower mining markets.
Try it out 
Response Schema   |   Example
200 OK (application/json)
[
string - EU, USA, EU_N, USA_E, SA, ASIA
]
GET/main/api/v2/public/currenciesCURRENCIES
Get currency list and details for each currency.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
currencies : [
{
symbol : string - Symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
name : string - Name
transactionInfoUrl : string - Url for transactions
addressInfoUrl : string - Url for addresses
blockInfoUrl : string - Url for block height
wallets : [
string - List of wallet types - BITGO, COINBASE, PAYEER, EXTERNAL, FEES, KRIPTOMAT, BLOCKCHAIN, LIGHTNING, INTERNAL, MULTISIG, FIREBLOCKS, FIREBLOCKS_AG, MINING, NEXPAY, NEXPAY_CORPORATE, MAERKIBAUMAN, LIGHTNING_LTD
]
order : integer - Currency order number
delisted : boolean - Is Currency delisted
base : string - Base currency - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
params : [
{
key : string
required : boolean
maxLength : integer
startWithZero : boolean
type : string
}
]
subunits : integer - Subunit decimal size
}
]
}
GET/main/api/v2/public/service/fee/infoFEE RULES
Fee rules for whole platforms. Response contains all possible fee rules on the platform.
Try it out 
Response Schema   |   Example
200 OK (*/*)
{
deposit : {
{
rules : {
{
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
}
}
}
withdrawal : {
{
rules : {
{
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
}
}
}
closing_withdrawal : {
{
rules : {
{
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
}
}
}
exchangeTaker : {
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
exchangeMaker : {
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
buyingNonRefundableFee : {
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
buyingSpentFee : {
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
sellFee : {
coin : string - Currency symbol - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
intervals : [
{
dynamic : boolean
start : number - Start of the interval
end : number - End of the interval
element : {
value : number - Base fee value
type : string - Base fee type - U, %
sndValue : number - Second fee value
sndType : string - Second fee type - U, %
}
}
]
}
adminServiceFee : {
fees : [
{
task : string
description : string
pricePercent : integer
minPriceUSD : number
useOriginCurrency : boolean
}
]
}
}
GET/api/v2/enum/countriesCOUNTRIES
Get countries info
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
countries : [
{
code : string
name : string
flag : string
dialCode : string
continent : string
}
]
continents : [
{
code : string
name : string
}
]
statesPerCountry : [
{
country : string
states : [
{
code : string
name : string
}
]
}
]
}
GET/api/v2/enum/permissionsPERMISSIONS
Get all possible organization permissions.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
permissionSettings : [
{
permission : {
type : string - Code - VBTD, WIFU, WNWA, VHOR, PRCO, ELCO, MAPO, EXOR, VITR, VMDS, MARI, VIUS, MAUS, VIPA, MAPA, VPOS, MPOS, VCHE, MCHE, MASE, VISE, UPOS, MPLG, MKPA
title : string - Title
description : string - Description
order : integer - Order (inside group)
group : {
type : string - Permission group type - WALLET_PERMISSION, MARKETPLACE_PERMISSION, EXCHANGE_PERMISSION, MINING_PERMISSION, USER_MANAGEMENT_SECURITY_PERMISSION, PAYMENT_ORDERS_PERMISSION
title : string - Group title
order : integer - Group order number
}
}
enabled : boolean
}
]
}
GET/api/v2/enum/xchCountriesXCH_COUNTRIES
Get all allowed exchange countries
Try it out 
Response Schema   |   Example
200 OK (application/json)
[
string
]
GET/api/v2/system/flagsAPI FLAGS
A list of all API flags and their values. Flag type designates API feature of the platform. Possible values are:
IS_MAINTENANCE - is true when maintenance is in progress
SYSTEM_UNAVAILABLE - is true when whole REST API is not available
DISABLE_REGISTRATION - is true when new registrations are not allowed
IS_KM_MAINTENANCE - is true when EUR/BTC exchange is not available
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
flagName : string - IS_MAINTENANCE, SYSTEM_UNAVAILABLE, DISABLE_REGISTRATION, IS_KM_MAINTENANCE, IS_PERSONAL_KYC_AVAILABLE, IS_BANXA_DISABLED, IS_21ANALYTICS_DISABLED, TEST
flagValue : boolean
}
]
}
GET/api/v2/timeSERVER TIME
Get server time. Can be used for authentication purposes, please check General section with authentication description.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
serverTime : integer - Time in millis since 1.1.1970 00:00:00 UTC
}
Reports
Reports REST API methods

POST/main/api/v2/reports/merchantInvoice/addCREATE INVOICE 
Create merchant invoice.
Try it out 
Permissions required
VBTD - Wallet / View balances transactions and deposit addresses (VBTD)
Parameters
name	type	description	in	default	options
amount *	number	
query		example:
* - required
Request Body * required
Accept: application/json (array)
Response Schema   |   Example
200 OK (*/*)
string
Miner private
Miner private REST API methods

GET/main/api/v2/mining/miningAddressMiningAddress 
GET/main/api/v2/mining/algo/statsRIG STATISTICS 
GET/main/api/v2/mining/groups/listGROUPS 
GET/main/api/v2/mining/rig/stats/algoRIG STATISTICS 
GET/main/api/v2/mining/rig/stats/unpaidRIG STATISTICS 
GET/main/api/v2/mining/rig2/{rigId}RIG DETAILS 
GET/main/api/v2/mining/rigsRIGS 
GET/main/api/v2/mining/rigs/activeWorkersACTIVE WORKERS 
GET/main/api/v2/mining/rigs/payoutsPAYOUTS 
GET/main/api/v2/mining/rigs/stats/algoMINER STATISTICS 
GET/main/api/v2/mining/rigs/stats/dataLIST OF DAILY EARNINGS 
GET/main/api/v2/mining/rigs/stats/data/algoLIST OF DAILY EARNINGS PER ALGORITHM 
GET/main/api/v2/mining/rigs/stats/historyEARNINGS HISTORY 
GET/main/api/v2/mining/rigs/stats/unpaidMINER STATISTICS 
POST/main/api/v2/mining/rigs/status2RIG ACTION 
GET/main/api/v2/mining/rigs2RIGS 
GET/main/api/v2/mining/rigs2/exportOfflineRIGS 
GET/main/api/v2/optimization/profile/all/bundlesMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/profile/all/profilesMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/profile/bundleMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/bundleMINER OPTIMIZATION PROFILE BUNDLES 
DELETE/main/api/v2/optimization/profile/bundleMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/bundle/copyPublicBundleMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/bundle/shareOptionsMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/profile/elpProfileMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/elpProfileMINER OPTIMIZATION PROFILE BUNDLES 
DELETE/main/api/v2/optimization/profile/elpProfileMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/profile/fanProfileMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/fanProfileMINER OPTIMIZATION PROFILE BUNDLES 
DELETE/main/api/v2/optimization/profile/fanProfileMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/profile/minersAndAlgosList of algorithms and miners
GET/main/api/v2/optimization/profile/ocProfileMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/ocProfileMINER OPTIMIZATION PROFILE BUNDLES 
DELETE/main/api/v2/optimization/profile/ocProfileMINER OPTIMIZATION PROFILE BUNDLES 
POST/main/api/v2/optimization/profile/ratingMINER OPTIMIZATION PROFILE BUNDLE RATING 
PUT/main/api/v2/optimization/profile/ratingMINER OPTIMIZATION PROFILE BUNDLE RATING 
DELETE/main/api/v2/optimization/profile/ratingMINER OPTIMIZATION PROFILE BUNDLE RATING 
PUT/main/api/v2/optimization/profile/restoreBundleMINER OPTIMIZATION PROFILE BUNDLES 
PUT/main/api/v2/optimization/profile/restoreElpProfileMINER OPTIMIZATION PROFILE BUNDLES 
PUT/main/api/v2/optimization/profile/restoreFanProfileMINER OPTIMIZATION PROFILE BUNDLES 
PUT/main/api/v2/optimization/profile/restoreOcProfileMINER OPTIMIZATION PROFILE BUNDLES 
GET/main/api/v2/optimization/publicBundlesPUBLIC BUNDLES LIST
GET/main/api/v2/optimization/publicBundlesByCategoryPUBLIC BUNDLES LIST
GET/main/api/v2/optimization/usersPublicBundlesPUBLIC BUNDLES LIST
EasyMining private
EasyMining private REST API methods

GET/main/api/v2/hashpower/order/{id}/rewardsGET LIST OF REWARDS FOR EASY MINING SOLO TICKET 
GET/main/api/v2/hashpower/shared/ticket/claim/{id}CLAIM EASY MINING TEAM TICKET REWARDS 
POST/main/api/v2/hashpower/shared/ticket/{id}BUY A SHARE OF EASY MINING TEAM PACKAGE 
GET/main/api/v2/hashpower/sharedTicketExternalAddress/listLIST SAVED EASYMINING ADDRESSES
GET/main/api/v2/hashpower/solo/claimRewardCLAIM EASY MINING SOLO TICKET REWARDS 
GET/main/api/v2/hashpower/solo/orderEASY MINING SOLO TICKET LIST 
POST/main/api/v2/hashpower/solo/orderBUY EASY MINING SOLO PACKAGE 
GET/main/api/v2/hashpower/solo/order/{id}EASY MINING SOLO TICKET DETAILS 
GET/main/api/v2/hashpower/solo/shared/orderEASY MINING SHARED TICKET LIST 
GET/main/api/v2/hashpower/solo/shared/order/{id}EASY MINING SHARED TICKET DETAILS 
EasyMining public
EasyMining public REST API methods

GET/main/api/v2/public/solo/coinRewardStatsMINED BLOCKS STATS
GET/main/api/v2/public/solo/packageSOLO EASYMINING PACKAGES
GET/main/api/v2/public/solo/shared/orderTEAM EASYMINING PACKAGES
GET/main/api/v2/public/solo/singleRewardMINED BLOCKS
Hashpower private
Hashpower private REST API methods

GET/main/api/v2/hashpower/business/buyer/statsBUSINESS BUYER STATISTICS 
Get statistics about your business orders aggregated by day.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
aggregation *	string	Aggregation mode
query		[ "DAY", "WEEK", "MONTH" ] example: DAY
algorithm *	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256ASICBOOST
page	integer	Page
query	0	example: 0
limit	integer	Limit
query	30	example: 30
* - required
Response Schema   |   Example
200 OK (application/json)
[
{
time : string
algorithm : string - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
organizationId : string
hashrate : number
speedAccepted : number
speedRejectedR1Target : number
speedRejectedR2Stale : number
speedRejectedR3Duplicate : number
speedRejectedR4NTime : number
speedRejectedR5Other : number
speedRejectedR6Worker : number
speedRejectedR7Timeout : number
speedRejectedTotal : number
speedRewarded : number
speedLimit : number
speedPaying : number
speedRejected : number
price : number
}
]
GET/main/api/v2/hashpower/business/buyer/stats/exportBUSINESS BUYER EXPORT STATISTICS 
Export business statistics in selected range.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
algorithm *	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256ASICBOOST
beginTime *	integer	Begin Time
query		example: 255135600000000
endTime *	integer	End Time
query		example: 255135600000000
* - required
Response Schema   |   Example
200 OK (application/json)
[
{
time : string
algorithm : string - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
organizationId : string
hashrate : number
speedAccepted : number
speedRejectedR1Target : number
speedRejectedR2Stale : number
speedRejectedR3Duplicate : number
speedRejectedR4NTime : number
speedRejectedR5Other : number
speedRejectedR6Worker : number
speedRejectedR7Timeout : number
speedRejectedTotal : number
speedRewarded : number
speedLimit : number
speedPaying : number
speedRejected : number
price : number
}
]
GET/main/api/v2/hashpower/business/buyers/infoBUSINESS BUYER DETAILS 
Get your business buyer information.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Response Schema   |   Example
200 OK (application/json)
{
id : string
createdTs : string
updatedTs : string
orgId : string
type : string - STANDARD, ENGINE_V1
fee : number
active : boolean
meta : string
fees : {
number
}
}
POST/main/api/v2/hashpower/business/orderCREATE BUSINESS ORDER 
Create hashpower order. When constructing order request, some limitation must be taken into consideration, like minimum amount, minimum end date, ... Limitation varies among algorithms and can be fetched using /main/api/v2/public/buy/info endpoints.

To create hashpower order, algorithm and market has to be specified. Before creating order pool has to be created for the same algorithm using /main/api/v2/pool endpoint.

When creating BUSINESS order, amount, endTs and pool id has to be specified, along with market factor and display market factor from /main/api/v2/public/buy/info endpoint for the same algorithm.

When order is created in hashpower marketplace details of newly created order are returned in response.

More information about hashpower marketplace and order creation can be found on Hashpower marketplace help section.
Try it out 
Permissions required
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Request Body * required
Accept: application/json (object)
name	type	description	options
market	string	Market
[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ]
algorithm	string	Algorithm
[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ]
amount	number	Amount in BTC
displayMarketFactor	string	Used display market factor
marketFactor	number	Used display market factor (numeric)
displayPriceFactor	string	Unit for price factor
priceFactor	number	Price factor
poolId	string	Pool id
endTs	string	Hash power order end date
bottomLimit	number	Bottom speed limit in factor[hash/sol]/s, limited to 2 digits to the right of the decimal point!
limit	number	Speed limit in factor[hash/sol]/s, limited to 2 digits to the right of the decimal point!
subType	string	
[ "BUSINESS_FIXED_SPEED" ]
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
GET/main/api/v2/hashpower/business/settings/infoBUSINESS SETTINGS DETAILS 
Get business settings details.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Response Schema   |   Example
200 OK (application/json)
[
{
miningAlgorithm : string - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
enabled : boolean
}
]
GET/main/api/v2/hashpower/myOrdersMY ORDERS 
Get a list of my hashpower orders matching the filtering criteria as specified by parameters included in the request.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
algorithm	string	Mining algorithm (optional, if not supplied all algorithms are returned)
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
status	string	Order status (optional, if not supplied, all order statuses are returned)
query		[ "PENDING", "ACTIVE", "PENDING_CANCELLATION", "CANCELLED", "DEAD", "EXPIRED", "ERROR", "ERROR_ON_CREATION", "ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS", "COMPLETED", "ERROR_MISSING" ] example: ACTIVE
active	boolean	Show only active or not active orders (optional, active orders: PENDING, ACTIVE, PENDING_CANCELLATION)
query		example: true
market	string	Filter by market place (optional)
query		[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ] example: EU
type	string	Filter by type (options)
query		[ "STANDARD", "FIXED", "BUSINESS" ] example: STANDARD
ts *	integer	Timestamp to compare
query		example: 255135600000000
op *	string	The order operator to compare timestamp
query		[ "GT", "GE", "LT", "LE" ] example: GT
limit *	integer	Max limit results. Maximum is 1000
query		example: 100
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Order ID
availableAmount : number - Available total amount
payedAmount : number - Amount payed for hashpower
endTs : string - End timestamp in ISO format
updatedTs : string - Order last updated timestamp in ISO format
estimateDurationInSeconds : integer - Estimated duration in seconds
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
market : string - Market - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
liquidation : string - Order liquidation
meta : string - Order meta
price : number - Order price in BTC/factor[TH/Sol/G]/day
limit : number - Speed limit [TH/Sol/G]/s
bottomLimit : number - Bottom Speed limit [TH/Sol/G]/s
amount : number - Amount
displayMarketFactor : string - Unit of market factor
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
alive : boolean - Order is alive
startTs : string - Start timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
acceptedCurrentSpeed : number - Current accepted speed [TH/Sol/G]/s
rigsCount : integer - Rigs count
organizationId : string - Organization Id
creatorUserId : string - Creator Id
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningRewardAddr : string - Solo mining reward address
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
}
]
}
POST/main/api/v2/hashpower/orderCREATE ORDER 
Create hashpower order. When constructing order request, some limitation must be taken into consideration, like minimum amount, minimum speed limit, minimup price, ... Limitation varies among algorithms and can be fetched using /main/api/v2/public/buy/info endpoints.

To create hashpower order, algorithm and market has to be specified. Before creating order pool has to be created for the same algorithm using /main/api/v2/pool endpoint.

When creating STANDARD order, speed limit, price, amount and pool id has to be specified, along with market factor and display market factor from /main/api/v2/public/buy/info endpoint for the same algorithm.

When order is created in hashpower marketplace details of newly created order are returned in response.

More information about hashpower marketplace and order creation can be found on Hashpower marketplace help section.
Try it out 
Permissions required
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Request Body * required
Accept: application/json (object)
name	type	description	options
market	string	Market
[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ]
algorithm	string	Algorithm
[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ]
amount	number	Amount in BTC
displayMarketFactor	string	Used display market factor
marketFactor	number	Used display market factor (numeric)
displayPriceFactor	string	Unit for price factor
priceFactor	number	Price factor
price	number	Price in BTC/factor[hash/sol]/day, limited to 4 digits to the right of the decimal point!
poolId	string	Pool id
limit	number	Speed limit in factor[hash/sol]/s, limited to 2 digits to the right of the decimal point!
type	string	Hash power order type
[ "STANDARD", "FIXED", "BUSINESS" ]
subType	string	
[ "BUSINESS_FIXED_SPEED" ]
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
GET/main/api/v2/hashpower/order/{id}ORDER DETAILS 
Get hashpower order detailed information using order id.
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
DELETE/main/api/v2/hashpower/order/{id}CANCEL ORDER 
Cancel hashpower order using order id. Cancel action affects only active orders. When successful, affected order is returned in the response.
Try it out 
Permissions required
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
GET/main/api/v2/hashpower/order/{id}/business/statsBUSINESS ORDER STATISTICS 
Get statistical streams for selected business order using order id. Result consists of following streams:
Timestamp in milliseconds since 1.1.1970
Accepted speed
Rejected speed - share above target
Rejected speed - stale shares
Rejected speed - duplicate shares
Rejected speed - invalid ntime
Rejected speed - other reason
Rejected speed - unknow worker
Rejected speed - response timeout
Speed limit
Rewareded speed
Paying speed
Rejected speed
Price
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
displayMarketFactor : string - Unit for market factor
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
totalAcceptedShares : integer - Market unit for the algorithm
totalRejectedShares : integer - Market unit for the algorithm
columns : [
string - Stream definition
]
data : [
[
object - Statistical data
]
]
}
POST/main/api/v2/hashpower/order/{id}/refillREFILL ORDER 
When order is active, amount on the order can be increased and prolong duration of active order in marketplace. The limitation for minimal and maximal amount are defined for each algorithm and can be fetched using /main/api/v2/public/buy/info endpoint.

More information about hashpower marketplace and order manipulation can be found on Hashpower marketplace help section.
Try it out 
Permissions required
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
amount	number	
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
GET/main/api/v2/hashpower/order/{id}/statsORDER STATISTICS 
Get statistical streams for selected order using order id. Result consists of following streams:
Timestamp in milliseconds since 1.1.1970
Is order alive
Accepted speed
Rejected speed - share above target
Rejected speed - stale shares
Rejected speed - duplicate shares
Rejected speed - invalid ntime
Rejected speed - other reason
Rejected speed - unknow worker
Rejected speed - response timeout
Speed limit
Rewareded speed
Paying speed
Rejected speed
Paid amount
Price
Try it out 
Permissions required
VHOR - Hashpower orders / View hashpower orders (VHOR)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
afterTimestamp	integer	After timestamp (optional, used to load only new data)
query		example: 255135600000000
* - required
Response Schema   |   Example
200 OK (application/json)
{
displayMarketFactor : string - Unit for market factor
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
totalAcceptedShares : integer - Market unit for the algorithm
totalRejectedShares : integer - Market unit for the algorithm
columns : [
string - Stream definition
]
data : [
[
object - Statistical data
]
]
}
POST/main/api/v2/hashpower/order/{id}/updateBottomLimitAndEndTsUPDATE BOTTOM SPEED LIMIT AND END DATE OF BUSINESS ORDER 
At any time order bottom speed limit or end date can be altered when hashpower order is active. Changes must be withing limits defined for each algoritm separately.
Try it out 
Permissions required
ELCO - Marketplace / Edit price limit and cancel hashpower orders (ELCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
bottomLimit	number	Bottom speed limit
endTs	string	End date
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
POST/main/api/v2/hashpower/order/{id}/updateEndTsUPDATE END DATE OF BUSINESS ORDER 
At any time order end date can be altered when hashpower order is active. Changes must be withing limits defined for each algoritm separately.
Try it out 
Permissions required
ELCO - Marketplace / Edit price limit and cancel hashpower orders (ELCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
endTs	string	
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
POST/main/api/v2/hashpower/order/{id}/updateLimitUPDATE LIMIT 
At any time order speed limit can be altered when hashpower order is active. Changes must be withing limits defined for each algoritm separately. These limits can be fetched using /main/api/v2/public/buy/info endpoint. More information about hashpower marketplace and order manipulation can be found on Hashpower marketplace help section.
Try it out 
Permissions required
ELCO - Marketplace / Edit price limit and cancel hashpower orders (ELCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
price	number	Order price
limit	number	Order speed limit
displayMarketFactor	string	Used display market factor
marketFactor	number	Used display market factor (numeric)
displayPriceFactor	string	Unit for price factor
priceFactor	number	Price factor
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
POST/main/api/v2/hashpower/order/{id}/updatePriceAndLimitUPDATE PRICE AND LIMIT 
At any time order speed limit and price can be altered when hashpower order is active. Changes must be withing limits defined for each algoritm separately. These limits can be fetched using /main/api/v2/public/buy/info endpoint. Order price can be decrease once in 10 minutes and the value of change must not be greater than more than down_step parameter from buy info endpoing.

More information about hashpower marketplace and order manipulation can be found on Hashpower marketplace help section.
Try it out 
Permissions required
ELCO - Marketplace / Edit price limit and cancel hashpower orders (ELCO)
Parameters
name	type	description	in	default	options
id *	string	Order ID
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Request Body * required
Accept: application/json (object)
name	type	description	options
price	number	Order price
limit	number	Order speed limit
displayMarketFactor	string	Used display market factor
marketFactor	number	Used display market factor (numeric)
displayPriceFactor	string	Unit for price factor
priceFactor	number	Price factor
Response Schema   |   Example
200 OK (application/json)
{
id : string - Id of hashpower order
createdTs : string - Timestamp when order was created in ISO format
updatedTs : string - Timestamp when order was last updated in ISO format
requestId : string - Idem of order
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
subType : string - BUSINESS_FIXED_SPEED
market : string - Location where order was placed - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
price : number - Order price
limit : number - Speed limit
bottomLimit : number - Bottom Speed limit
amount : number - Amount in the order
availableAmount : number - Available amount
payedAmount : number - Amount payed for hashpower
alive : boolean - Is order alive
startTs : string - Start timestamp in ISO format
endTs : string - End timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
organizationId : string - Organisation Id
creatorUserId : string - User Id
rigsCount : integer - Number of rigs mining for this order
acceptedCurrentSpeed : number - Accepted speed
displayMarketFactor : string - Market faktor unit
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
estimateDurationInSeconds : integer - Estimated duration in seconds
bridges : [
{
rigsCount : integer - Numer of rigs on bridge
jobsCount : integer - Numer of jobs on bridge
speedAccepted : number - Speed accepted by the bridge
speedRewarded : number - Speed rewarded by the bridge
speedRejected : number - Speed rejected by the bridge
sharesAccepted : integer - Number of shares accepted on bridge
sharesRewarded : integer - Number of shares rewarded on bridge
sharesRejected : integer - Number of rejected shares on bridge
difficulty : number - Pool difficulty
status : string - Bridge statues
}
]
liquidation : string - Order liquidation
meta : string - Order meta
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
soloMiningRewardAddr : string - Solo mining external reward address
soloMiningRewardExchangeId : string - Solo mining xch id
soloMiningMergeRewardExchangeId : string
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
}
POST/main/api/v2/hashpower/orders/calculateEstimateDurationESTIMATE ORDER DURATION 
Estimated duration of a hashpower order from the order type, amount, price and limit. The maximal value for STANDARD order is 10 days

More information about hashpower marketplace and order behaviour and limitations can be found on Hashpower marketplace help section.
Try it out 
Permissions required
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Request Body * required
Accept: application/json (object)
name	type	description	options
type	string	Order type
[ "STANDARD", "FIXED", "BUSINESS" ]
price	number	Price
limit	number	Speed limit
amount	number	Amount
decreaseFee	boolean	Should be amount decrease by fee amount before estimation
displayMarketFactor	string	Unit of market factor
marketFactor	number	Market factor
displayPriceFactor	string	Price unit for the algorithm
priceFactor	number	Price factor for the algorithm
Response Schema   |   Example
200 OK (application/json)
{
estimateDurationInSeconds : integer - Estimated duration in seconds
}
Hashpower public
Hashpower public REST API methods

GET/main/api/v2/hashpower/order/priceORDER OPTIMAL PRICE
Get optimal current paying price for selected market and algorithm.
Try it out 
Parameters
name	type	description	in	default	options
market *	string	Market
query		[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ] example: EU
algorithm *	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
* - required
Response Schema   |   Example
200 OK (application/json)
{
price : object - Optimal price for order in BTC/factor[TH/Sol/G]/day
}
GET/main/api/v2/hashpower/orderBookORDER BOOK
Hashpower order book for specified algorithm. Response contains orders for all markest and their stats. When there a lot of orders, response will be paged.
Try it out 
Parameters
name	type	description	in	default	options
algorithm *	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
size	integer	Page size (optional, default: 100)
query	100	example: 100
page	integer	Page number (optional, default: 0)
query	0	example: 0
* - required
Response Schema   |   Example
200 OK (application/json)
{
stats : {
{
updatedTs : string - Timestamp of the order book in ISO format.
totalSpeed : number - Total speed of the market [TH/Sol/G]/s.
marketFactor : number - Market factor for the algorithm
displayMarketFactor : string - Market unit for the algorithm
priceFactor : number - Price factor for the algorithm
displayPriceFactor : string - Price unit for the algorithm
orders : [
{
id : string - Order ID
type : string - Order type - STANDARD, FIXED, BUSINESS
subType : string - BUSINESS_FIXED_SPEED
price : number - Price in BTC/factor[TH/Sol/G]/day
limit : number - Speed limit [TH/Sol/G]/s
rigsCount : integer - Rigs mining for order
acceptedSpeed : number - Current accepted speed [TH/Sol/G]/s
payingSpeed : number - Current paying speed [TH/Sol/G]/s
alive : boolean - Is order alive?
myOrder : boolean - Set to true if user is users order, otherwise is not set
availableAmount : number - Available total amount
payedAmount : number - Payed amount
amount : number - Amount
poolName : string - Pool name
endTs : string - End timestamp
bottomLimit : number - Bottom Speed limit [TH/Sol/G]/s
updatedTs : string - Order last updated timestamp
estimateDurationInSeconds : integer - Estimated duration in seconds
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
}
}
GET/main/api/v2/hashpower/orders/summariesORDER SUMMARIES
Get accepted and rejected speeds for rigs and pools, rig count and paying price for selected market and/or algorithm. When no market or algorithm is specified all markets and algorithms are returned.
Try it out 
Parameters
name	type	description	in	default	options
market	string	Market
query		[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ] example: EU
algorithm	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
* - required
Response Schema   |   Example
200 OK (application/json)
{
summaries : {
{
profs : [
{
type : string - Type of orders
speed : number - Speed [H/Sol/G]/s
price : number - Average price in satoshi/factor[H/Sol/G]/sec
rigCount : integer - Number of rigs
orderCount : integer - Number of orders
}
]
acceptedPoolSpeed : number - Accepted pool speed [H/Sol/G]/s
acceptedRigSpeed : number - Accepted rig speed [H/Sol/G]/s
payingPrice : number - Price paying for speed in satoshi/factor[H/Sol/G]/sec
rejectedPoolSpeed : number - Rejected pool speed [H/Sol/G]/s
rejectedRigSpeed : number - Rejected rig speed [H/Sol/G]/s
}
}
}
GET/main/api/v2/hashpower/orders/summaryORDERS SUMMARY
Get accepted and rejected speed from pools and rigs, rig count and paying price for selected market and algorithm.
Try it out 
Parameters
name	type	description	in	default	options
market *	string	Market
query		[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ] example: EU
algorithm *	string	Mining algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
* - required
Response Schema   |   Example
200 OK (application/json)
{
profs : [
{
type : string - Type of orders
speed : number - Speed [H/Sol/G]/s
price : number - Average price in satoshi/factor[H/Sol/G]/sec
rigCount : integer - Number of rigs
orderCount : integer - Number of orders
}
]
acceptedPoolSpeed : number - Accepted pool speed [H/Sol/G]/s
acceptedRigSpeed : number - Accepted rig speed [H/Sol/G]/s
payingPrice : number - Price paying for speed in satoshi/factor[H/Sol/G]/sec
rejectedPoolSpeed : number - Rejected pool speed [H/Sol/G]/s
rejectedRigSpeed : number - Rejected rig speed [H/Sol/G]/s
}
GET/main/api/v2/public/algo/historyALGORITHM HISTORY
Whole history for the selected algorithm.
Try it out 
Parameters
name	type	description	in	default	options
algorithm *	string	Algorithm code
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
fromTimestamp	integer	Range from timestamp (inclusive)
query		example: 1603023402000
toTimestamp	integer	Range to timestamp (exclusive)
query		example: 1603109802000
* - required
Response Schema   |   Example
200 OK (application/json)
[
[
number - History of algorithm, list with 4 items: timestamp, speed [TH/Sol/G]/s, price in satoshi/factor[H/Sol/G]/sec and reward (if global parameter is true)
]
]
GET/main/api/v2/public/algo/historyForIntervalALGORITHM HISTORY
Whole history for the selected algorithm.
Try it out 
Parameters
name	type	description	in	default	options
algorithm *	string	Algorithm code
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
fromTimestamp	integer	Range from timestamp (inclusive)
query		example: 1603023402000
toTimestamp	integer	Range to timestamp (exclusive)
query		example: 1603109802000
global	boolean	Global price
query	false	example: false
* - required
Response Schema   |   Example
200 OK (application/json)
[
[
number - History of algorithm, list with 4 items: timestamp, speed [TH/Sol/G]/s, price in satoshi/factor[H/Sol/G]/sec and reward (if global parameter is true)
]
]
GET/main/api/v2/public/buy/infoBUY INFO
Information for each enabled algorithm needed for buying hashpower. Result contains minimum and maximum values for price, limit, information about minimum pool difficulty and more that can be useful in automated application like NicehashBot
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
miningAlgorithms : [
{
down_step : number - Maximal allowed down step for price
min_diff_working : number - Minimal working difficulty
min_limit : number - Minimal value for speed limit
max_limit : number - Maximal value for speed limit
speed_text : string - Speed unit
min_diff_initial : number - Minimal initial difficulty
name : string - Algorithm name
algo : integer - Algorithm code
multi : number - Unit factor
price_multi : number - Price unit factor
min_price : number - Minimal value for price in BTC/factor[TH/Sol/G]/day
max_price : number - Maximal value for price in BTC/factor[TH/Sol/G]/day
min_amount : number - Minimal allowed amount
enabledHashpowerMarkets : [
string - Enabled hashpower markets - EU, USA, EU_N, USA_E, SA, ASIA
]
}
]
}
GET/main/api/v2/public/ordersORDERS
Get all hashpower orders. Request parameter work as filter to fine tune the result. The result is paged, when needed.
Try it out 
Parameters
name	type	description	in	default	options
algorithm	string	Algorithm
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
market	string	Market
query		[ "EU", "USA", "EU_N", "USA_E", "SA", "ASIA" ] example: EU
op	string	Relation operation
query		[ "GT", "GE", "LT", "LE" ] example: GT
timestamp	integer	The timestamp to compare
query		example: 255135600000000
page	integer	Page
query	0	example: 0
size	integer	Size. Default is 100, maximum is 100
query	100	example: 100
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Order ID
availableAmount : number - Available total amount
payedAmount : number - Amount payed for hashpower
endTs : string - End timestamp in ISO format
updatedTs : string - Order last updated timestamp in ISO format
estimateDurationInSeconds : integer - Estimated duration in seconds
type : {
code : string - Enum code - STANDARD, FIXED, BUSINESS
description : string - Translated enum
}
market : string - Market - EU, USA, EU_N, USA_E, SA, ASIA
algorithm : {
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title of the algorithm
enabled : boolean - Is the algorithm Enabled
order : integer - Algorithm order number
}
status : {
code : string - Order status code - PENDING, ACTIVE, PENDING_CANCELLATION, CANCELLED, DEAD, EXPIRED, ERROR, ERROR_ON_CREATION, ERROR_ON_CREATION_ON_REVERTING_TRANSACTIONS, COMPLETED, ERROR_MISSING
description : string - Translated description of status
}
liquidation : string - Order liquidation
meta : string - Order meta
price : number - Order price in BTC/factor[TH/Sol/G]/day
limit : number - Speed limit [TH/Sol/G]/s
bottomLimit : number - Bottom Speed limit [TH/Sol/G]/s
amount : number - Amount
displayMarketFactor : string - Unit of market factor
marketFactor : number - Market factor
priceFactor : number - Market factor for the algorithm
displayPriceFactor : string - Market unit for the algorithm
alive : boolean - Order is alive
startTs : string - Start timestamp in ISO format
pool : {
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
acceptedCurrentSpeed : number - Current accepted speed [TH/Sol/G]/s
rigsCount : integer - Rigs count
organizationId : string - Organization Id
creatorUserId : string - Creator Id
soloMiningCoin : string - Solo mining coin - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningMergeCoin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
soloMiningRewardAddr : string - Solo mining reward address
soloReward : [
{
id : string
orderId : string
coin : string - BTC, ETH, XRP, BCH, LTC, ZEC, DASH, XLM, EOS, USDT, BSV, LINK, BAT, PAX, ZRX, HOT, OMG, REP, NEXO, BTG, EURKM, ENJ, MATIC, ELF, SNT, BNT, KNC, MTL, POLY, POWR, GTO, LOOM, CVC, AST, PPT, LRC, KEY, STORJ, STORM, TNT, DATA, AOA, RDN, USDC, FET, ANT, AERGO, LBA, XMR, MITH, BAND, SXP, EURS, WBTC, RVN, UNI, AAVE, FTM, YFI, DOGE, ONEINCH, SUSHI, OCEAN, MKR, CRV, CHZ, GRT, GNO, HBAR, ADA, ALGO, XTZ, SAND, SHIB, STX, GALA, SOL, DOT, ETC, TRX, KSM, EUR, KAS, TBTC, TETH, TXRP, TBCH, TLTC, TZEC, TDASH, TXLM, TEOS, TERC, TBSV, TBTG, TEURKM, TXMR, TRVN, TDOGE, THBAR, TADA, TALGO, TXTZ, TSTX, TTTT, TSOL, TDOT, TETC, TTRX, TEUR, TMARC, TKAS
blockHeight : integer
blockHash : string
tx : string
payoutAddress : string
payoutReward : integer
payoutRewardBtc : number
feeAddress : string
feeReward : integer
time : integer
createdTs : string
depositComplete : boolean
confirmations : integer
minConfirmations : integer
packageId : string
packageName : string
secondsEta : integer
shared : boolean
depositDonated : boolean
}
]
}
]
}
GET/main/api/v2/public/simplemultialgo/infoSIMPLE STATUS
Get information about speed and price for each enabled algorithm.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
miningAlgorithms : [
{
algorithm : string - Algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
title : string - Title
speed : number - Mining algorithm speed [H/Sol/G]/s
paying : number - Mining algorithm price in satoshi/factor[H/Sol/G]/sec
}
]
}
GET/main/api/v2/public/stats/global/24h24 HOUR STATISTICS
Get average price and hashpower speed for all enabled algorithms in average for past 24 hours.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
algos : [
{
a : integer - Algorithem code
p : number - Paying price in satoshi/[H/Sol/G]/sec per day
s : number - Total speed [H/Sol/G]/s
r : integer - Number of rigs on the algorithm
o : integer - Number active orders
}
]
}
GET/main/api/v2/public/stats/global/currentCURRENT STATISTICS
Get current price and hashpower speed for all enabled algorithms in average for last 5 minutes.
Try it out 
Response Schema   |   Example
200 OK (application/json)
{
algos : [
{
a : integer - Algorithem code
p : number - Paying price in satoshi/[H/Sol/G]/sec per day
s : number - Total speed [H/Sol/G]/s
r : integer - Number of rigs on the algorithm
o : integer - Number active orders
}
]
}
Pools
Pools REST API methods

POST/main/api/v2/poolCREATE OR EDIT POOL 
Create or edit pool information. When creating pool, id of pool must not be in the request message. When editing id must match existing pool id, otherwise request will fail. Response contains created or edited pool detailed information.
Try it out 
Permissions required
MAPO - Marketplace / Manage pools (MAPO)
Request Body * required
Accept: application/json (object)
name	type	description	options
id	string	Pool id (When creating new pool this value should not be set.)
name	string	Pool custom name
algorithm	string	Pool algorithm
[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ]
stratumHostname	string	Hostname or ip of the pool
stratumPort	integer	Port of the pool
username	string	Username
password	string	Password (Set password to # when using ethproxy pool.)
status	string	Verification status
[ "VERIFIED", "NOT_VERIFIED" ]
updatedTs	string	
inMoratorium	boolean	
Example:
{
  "username": "x",
  "stratumPort": 17040,
  "name": "Lyra2REv3",
  "algorithm": "LYRA2REV3",
  "updatedTs": "2020-09-23T13:30:35.442984Z",
  "password": "x",
  "stratumHostname": "10.10.0.81",
  "id": "804e4b51-e3cd-4c4a-b202-205558559be5"
}
Response Schema   |   Example
200 OK (application/json)
{
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
GET/main/api/v2/pool/{poolId}POOL DETAILS 
Get pool information using pool id.
Try it out 
Permissions required
MAPO - Marketplace / Manage pools (MAPO)
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Parameters
name	type	description	in	default	options
poolId *	string	Pool id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
DELETE/main/api/v2/pool/{poolId}DELETE POOL 
Delete pool using pool id. The operation is not reversible.
Try it out 
Permissions required
MAPO - Marketplace / Manage pools (MAPO)
Parameters
name	type	description	in	default	options
poolId *	string	Pool id
path		example: e14a3315-5a39-4480-a456-d3aef20cb98c
* - required
Response Schema   |   Example
200 OK (application/json)
{
success : boolean - Success
message : string - Message
successType : string - SuccessType - SUCCESSFUL, PARTIAL_SUCCESS, NOT_SUCCESSFUL
}
GET/main/api/v2/poolsPOOL LIST 
Fetch whole pool list. When more than 100 pools are contained in the list, pages should be used. Algorithm parameter can be used to filter out pools for selected algorithm.
Try it out 
Permissions required
MAPO - Marketplace / Manage pools (MAPO)
PRCO - Marketplace / Place, refill and cancel hashpower orders (PRCO)
Parameters
name	type	description	in	default	options
size	integer	Size
query	100	example: 100
page	integer	Page
query	0	example: 0
algorithm	string	Mining algorithm (optional, if not supplied all algorithms are returned)
query		[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ] example: SHA256
* - required
Response Schema   |   Example
200 OK (application/json)
{
list : [
{
id : string - Pool id (When creating new pool this value should not be set.)
name : string - Pool custom name
algorithm : string - Pool algorithm - SCRYPT, SHA256, SCRYPTNF, X11, X13, KECCAK, X15, NIST5, NEOSCRYPT, LYRA2RE, WHIRLPOOLX, QUBIT, QUARK, AXIOM, LYRA2REV2, SCRYPTJANENF16, BLAKE256R8, BLAKE256R14, BLAKE256R8VNL, HODL, DAGGERHASHIMOTO, DECRED, CRYPTONIGHT, LBRY, EQUIHASH, PASCAL, X11GOST, SIA, BLAKE2S, SKUNK, CRYPTONIGHTV7, CRYPTONIGHTHEAVY, LYRA2Z, X16R, CRYPTONIGHTV8, SHA256ASICBOOST, ZHASH, BEAM, GRINCUCKAROO29, GRINCUCKATOO31, LYRA2REV3, CRYPTONIGHTR, CUCKOOCYCLE, GRINCUCKAROOD29, BEAMV2, X16RV2, RANDOMXMONERO, EAGLESONG, CUCKAROOM, GRINCUCKATOO32, HANDSHAKE, KAWPOW, CUCKAROO29BFC, BEAMV3, CUCKAROOZ29, OCTOPUS, AUTOLYKOS, ZELHASH, KADENA, ETCHASH, VERUSHASH, KHEAVYHASH, NEXAPOW, IRONFISH, KARLSENHASH, ALEPHIUM, FISHHASH, PYRINHASH, XELISHASHV2
stratumHostname : string - Hostname or ip of the pool
stratumPort : integer - Port of the pool
username : string - Username
password : string - Password (Set password to # when using ethproxy pool.)
status : string - Verification status - VERIFIED, NOT_VERIFIED
updatedTs : string
inMoratorium : boolean
}
]
pagination : {
size : integer - Page size
page : integer - Page number (first page is 0)
totalPageCount : integer - Total page count
}
}
POST/main/api/v2/pools/verifyVERIFY POOL 
Verify connectivity between Nicehash stratum server and selected pool. Basic pool data are also checked like authentication, size of extranonoce, initial difficulty and structure of jobs. This verification cannot find incompatibility or validity of shares sent to the pool. Please note that checks are not complete and there are rare cases where verification cannot identify incompatible pool.
Try it out 
Permissions required
MAPO - Marketplace / Manage pools (MAPO)
Request Body * required
Accept: application/json (object)
name	type	description	options
poolVerificationServiceLocation	string	Market location from where the pool verification is executed
[ "EUROPE", "USA", "EUROPE_NORTH", "USA_EAST", "SOUTH_AMERICA", "ASIA" ]
miningAlgorithm	string	Mining algorithm of the selected pool
[ "SCRYPT", "SHA256", "SCRYPTNF", "X11", "X13", "KECCAK", "X15", "NIST5", "NEOSCRYPT", "LYRA2RE", "WHIRLPOOLX", "QUBIT", "QUARK", "AXIOM", "LYRA2REV2", "SCRYPTJANENF16", "BLAKE256R8", "BLAKE256R14", "BLAKE256R8VNL", "HODL", "DAGGERHASHIMOTO", "DECRED", "CRYPTONIGHT", "LBRY", "EQUIHASH", "PASCAL", "X11GOST", "SIA", "BLAKE2S", "SKUNK", "CRYPTONIGHTV7", "CRYPTONIGHTHEAVY", "LYRA2Z", "X16R", "CRYPTONIGHTV8", "SHA256ASICBOOST", "ZHASH", "BEAM", "GRINCUCKAROO29", "GRINCUCKATOO31", "LYRA2REV3", "CRYPTONIGHTR", "CUCKOOCYCLE", "GRINCUCKAROOD29", "BEAMV2", "X16RV2", "RANDOMXMONERO", "EAGLESONG", "CUCKAROOM", "GRINCUCKATOO32", "HANDSHAKE", "KAWPOW", "CUCKAROO29BFC", "BEAMV3", "CUCKAROOZ29", "OCTOPUS", "AUTOLYKOS", "ZELHASH", "KADENA", "ETCHASH", "VERUSHASH", "KHEAVYHASH", "NEXAPOW", "IRONFISH", "KARLSENHASH", "ALEPHIUM", "FISHHASH", "PYRINHASH", "XELISHASHV2" ]
stratumHost	string	Host name or ip of the selected stratum pool
stratumPort	integer	Port of the selected stratum pool
username	string	Username that is requested by the selected stratum pool
password	string	Password that is requested by the selected stratum pool
Example:
{
  "poolVerificationServiceLocation": "EUROPE",
  "miningAlgorithm": "DAGGERHASHIMOTO",
  "stratumHost": "etc.2miners.com",
  "stratumPort": "1010",
  "username": "x",
  "password": "x"
}
Response Schema   |   Example
200 OK (application/json)
{
success : boolean - Pool verification status
logs : [
{
timestamp : string - Timestamp
level : string - Level - INFO, WARNING, SEVERE
poolVerificationMessage : string - Pool verification message - INVALID_PORT_NUMBER, INVALID_HOST, NICEHASH_HOSTS_NOT_ALLOWED, INVALID_USERNAME, INVALID_PASSWORD, BLACKLISTED_POOL_HOST, POOL_HOST_SHOULD_NOT_INCLUDE_COLON, POOL_HOST_RESOLVED_TO_IP, POOL_HOST_CANNOT_BE_RESOLVED_TO_IP, CONNECTING_TO_STRATUM_PROXY_FOR_REGION, SELECTED_MINING_ALGORITHM, SELECTED_MINING_ALGORITHM_WITH_WARNING, UNKNOWN_PROXY_ERROR, PROXY_CONNECTION_REFUSED, SENDING_LOGIN_INFORMATION, RECEIVED_NO_RESPONSE_ON_LOGIN, UNKNOWN_MESSAGE, SENDING_MINING_SUBSCRIBE_REQUEST, SENDING_ETH_GET_WORK, RECEIVED_NO_RESPONSE, MINING_SUBSCRIBE_REQUEST_SUCCESSFUL, AUTHORIZATION_FAILED_WRONG_USERNAME_OR_PASSWORD, RECEIVED_MINING_SET_TARGET, RECEIVED_MINING_SET_DIFFICULTY, POOL_DIFFICULTY_TOO_LOW, POOL_EXTRANONCE_TOO_HIGH, POOL_EXTRANONCE_AND_EXTRANONCE2_TOO_HIGH, POOL_EXTRANONCE2_TOO_LOW, POOL_DIFFICULTY_CORRECT, QUESTIONABLE_STRATUM_VERSION, SENDING_MINING_CONFIG, RECEIVED_NO_RESPONSE_ON_MINING_CONFIG, FAILED_TO_PARSE_ROLING_VERSION, SENDING_GRIN_GET_WORK, FAILED_TO_PARSE_WORK, FAILED_TO_PARSE_DIFFICULTY, INVALID_JOB_BLOB_LENGTH, INVALID_POOL_EXTRANONCE, INVALID_MINING_SUBSCRIBE_RESPONSE, INVALID_LOGIN_RESPONSE, INVALID_WORK_RESPONSE, SUCCESS
params : {
string - Map of Pool verification params with status
}
message : string - Message
}
]
highestDifficulty : number - Highest difficulty set by pool
highestDifficultyFormatted : string - Highest difficulty set by pool formatted
difficultyCorrect : boolean - Is pool difficulty correct
durationTime : integer - Pool verification duration time
}
